{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","components/BlogForm.js","components/LoginForm.js","components/Togglable.js","App.js","index.js"],"names":["Blog","blog","handleLikeClick","handleRemoveClick","user","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","showIfAllowed","username","toggleVisibility","className","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","onClick","url","likes","id","name","baseUrl","token","create","newObject","config","headers","Authorization","axios","post","response","data","update","put","remove","ObjectID","delete","getAll","get","then","setToken","newToken","login","credentials","Notification","message","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","onSubmit","event","preventDefault","value","onChange","target","type","LoginForm","handleLogin","handleUsernameChange","handlePasswordChange","password","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","App","blogs","setBlogs","setMessage","messageStyle","setMessageStyle","setUsername","setPassword","setUser","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","blogObject","current","concat","setTimeout","likeBlog","blogToUpdate","find","b","removeBlog","confirm","autho","filter","loginService","setItem","stringify","removeItem","sort","a","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cb93711.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, handleLikeClick, handleRemoveClick, user }) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n  const showIfAllowed = { display: blog.user.username === user.username ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div className='blogDiv' style={blogStyle}>\n      <div>\n        {blog.title} {blog.author}\n        <button style={hideWhenVisible} onClick={toggleVisibility}>view</button>\n        <button style={showWhenVisible} onClick={toggleVisibility}>hide</button>\n      </div>\n      <div style={showWhenVisible} className='expandable'>\n        <div>{blog.url}</div>\n        <div>\n          likes {blog.likes} <button id={blog.id} onClick={handleLikeClick}>like</button>\n        </div>\n        <div>{blog.user.name || ''}</div>\n        <button style={showIfAllowed} onClick={handleRemoveClick}>remove</button>\n      </div>\n    </div>\n  )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  handleLikeClick: PropTypes.func.isRequired,\n  handleRemoveClick: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n}\n\nexport default Blog","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async newObject => {\n  const response = await axios.put(`${baseUrl}/${newObject.id}`, newObject)\n  return response.data\n}\n\nconst remove = async ObjectID => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${ObjectID}`, config)\n  return response.data\n}\n\nexport default { getAll, setToken, create, update, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst Notification = ({ message, style }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className={style}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ createBlog }) => {\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl\n    })\n    setNewAuthor('')\n    setNewTitle('')\n    setNewUrl('')\n  }\n\n  return (\n    <div>\n      <h3>create new</h3>\n      <form onSubmit={addBlog}>\n        <div>title <input id='title' value={newTitle} onChange={handleTitleChange} /></div>\n        <div>author <input id='author' value={newAuthor} onChange={handleAuthorChange} /></div>\n        <div>url <input id='url' value={newUrl} onChange={handleUrlChange} /></div>\n        <button id='create-button' type='submit'>create</button>\n      </form>\n    </div>\n  )\n}\n\nBlogForm.propTypes = { createBlog: PropTypes.func.isRequired }\n\nexport default BlogForm","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleLogin,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input id='username' type='text' value={username} name='Username' onChange={handleUsernameChange} />\n        </div>\n        <div>\n          password\n          <input id='password' type='password' value={password} name='Password' onChange={handlePasswordChange} />\n        </div>\n        <button id='login-button' type='submit'>login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n}\n\nexport default LoginForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [message, setMessage] = useState(null)\n  const [messageStyle, setMessageStyle] = useState('')\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = async (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    try {\n      const response = await blogService.create(blogObject)\n      setBlogs(blogs.concat(response))\n      setMessageStyle('notification')\n      setMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setMessageStyle('error')\n      setMessage(`Error: ${exception.message}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const likeBlog = async (event) => {\n    const blogToUpdate = blogs.find(b => b.id === event.target.id)\n    blogToUpdate.likes = blogToUpdate.likes + 1\n    try {\n      await blogService.update(blogToUpdate)\n      setMessageStyle('notification')\n      setMessage(`You liked ${blogToUpdate.title} by ${blogToUpdate.author}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setMessageStyle('error')\n      setMessage(`Error: ${exception.message}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const removeBlog = async (blog) => {\n    if(window.confirm(`Remove blog ${blog.title} by ${blog.autho}`)){\n      try {\n        await blogService.remove(blog.id)\n        setBlogs(blogs.filter(b => b.id !== blog.id))\n        setMessageStyle('notification')\n        setMessage(`Blog ${blog.title} removed`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      } catch (exception) {\n        setMessageStyle('error')\n        setMessage(`Error: ${exception.message}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      }\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem('loggedBloglistUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setMessageStyle('notification')\n      setMessage('logged in succesfully')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setMessageStyle('error')\n      setMessage('wrong username or password')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBloglistUser')\n    setUser(null)\n    blogService.setToken(null)\n    setMessageStyle('notification')\n    setMessage('logged out succesfully')\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const blogForm = () => (\n    <Togglable buttonLabel='create new blog' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n  const loginForm = () => (\n    <LoginForm\n      username={username}\n      password={password}\n      handleUsernameChange={({ target }) => setUsername(target.value)}\n      handlePasswordChange={({ target }) => setPassword(target.value)}\n      handleLogin={handleLogin}\n    />\n  )\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>Log in to application</h2>\n        <Notification message={message} style={messageStyle} />\n        {loginForm()}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} style={messageStyle} />\n      <p>{user.name} logged in <button onClick={handleLogout}>logout</button></p>\n      {blogForm()}\n      {blogs.sort((a, b) => b.likes - a.likes).map(blog =>\n        <Blog key={blog.id} blog={blog} user={user} handleLikeClick={likeBlog} handleRemoveClick={() => removeBlog(blog)} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}